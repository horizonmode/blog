name: "Bicep Whatif"

on:
  workflow_call:
    inputs:
      bicepMainPath:
        required: true
        type: string
      params:
        required: true
        type: string
      resourceGroup:
        required: true
        type: string

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  bicep-whatif:
    name: "Bicep Whatif"
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # - name: "Only run if infra has changed"
      #   uses: dorny/paths-filter@v3
      #   id: filter
      #   with:
      #     filters: |
      #       src:
      #         - 'infra/**'
      # Authenticate to Az CLI using OIDC
      - name: "Login to Azure"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

        # Checks that all Bicep configuration files adhere to a canonical format
      - name: Bicep Lint
        uses: Azure/cli@v1
        with:
          inlineScript: az bicep build --file ${{ inputs.bicepMainPath }}

      # Validate whether a template is valid at RG scope
      - name: Bicep Validate
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az deployment group validate \
              --name validate-${{ github.run_id }} \
              --template-file  ${{ inputs.bicepMainPath }} \
              --resource-group ${{ inputs.resourceGroup }} \
              --parameters ${{ inputs.params }}

      # Preview changes
      - name: "What-If"
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az deployment group what-if \
              --name whatif-${{ github.run_id }} \
              --template-file ${{ inputs.bicepMainPath }} \
              --resource-group ${{ inputs.resourceGroup }} \
              --parameters ${{ inputs.params }} > whatif

        # Create string output of Whatif
      - name: Create String Output
        id: whatif-string
        run: |
          WHATIF=$(cat whatif)

          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      # Publish Terraform Plan as task summary
      - name: Publish Whatif to Task Summary
        env:
          SUMMARY: ${{ steps.whatif-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      # If this is a PR post the changes
      - name: Push Whatif Output to PR
        if: github.ref != 'refs/heads/main'
        uses: actions/github-script@v6
        env:
          SUMMARY: "${{ steps.whatif-string.outputs.summary }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
            })
